"use strict";function resizeGlobe(){width=parseInt(d3.select("#globe_nav_container").style("width")),width=width-margin.left-margin.right,height=width*mapRatio,projection.translate([width/2,height/2]).scale(width),map.style("width",width+"px").style("height",height+"px"),map.select(".land").attr("d",path),map.selectAll(".state").attr("d",path)}function ready(t,e){function a(t,e){t.d3_id==e&&$(".current-country-data").append('\n          <div class="country-facts-countainer">\n            <h1>'+t.name+"</h1>\n            <h2>Capital: "+t.capital+"</h2>\n            <h3>Population: "+t.population+"</h3>\n\n            <h3>Government Type: "+t.government_type+"</h3>\n            <h3>Dual Citizenship: "+t.dual_citizenship+"</h3>\n            <h3>Residency Requirement: "+t.residency_requirement+"</h3>\n            <h5>Net Migration Rate: "+t.net_migration_rate+"</h5>\n\n            <h5>Urbanization: "+t.urbanization+"</h5>\n            <h3>GDP/Capita: "+t.gdp_per_capita+"</h3>\n            <h5>unemployment_rate: "+t.unemployment_rate+"</h5>\n            <h5>Population Below Poverty Line: "+t.population_below_poverty_line+"</h5>\n\n            <h5>Age_structure: "+t.Age_structure+"</h5>\n            <h3>Median Age: "+t.median_age+"</h3>\n            <h3>Sex Ratio: "+t.sex_ratio+"</h3>\n            <h3>Languages: "+t.languages+"</h3>\n            <h3>Ethnic Breakdown: "+t.ethnic_breakdown+"</h3>\n            <h3>Religions: "+t.religions+"</h3>\n\n            <h5>Climate: "+t.climate+"</h5>\n            <h5>Coastlin: "+t.coastline+"</h5>\n            <h5>Environment: "+t.environment+"</h5>\n            <h5>Natural Resources: "+t.natural_resources+"</h5>\n            <label>\n            <h5>Exports: "+t.exports+"</h5>\n            </label>\n\n            <label>Historical Background:\n              <textarea>"+t.background+"</textarea>\n            </label>\n          </div>\n        ")}var t=JSON.parse(t),e=d3.tsvParse(e),r=(topojson.feature(t,t.objects.land),topojson.feature(t,t.objects.countries).features);topojson.mesh(t,t.objects.countries,function(t,e){return t!==e});r=r.filter(function(t){return e.some(function(e){if(t.id==e.id)return t.name=e.name})}).sort(function(t,e){return t.name.localeCompare(e.name)}),map.insert("path",".graticule").datum(topojson.feature(t,t.objects.land)).attr("class","land").attr("d",path);for(var n=0;n<e.length;n++)for(var i=0;i<r.length;i++)r[i].id==e[n].id&&map.insert("path",".graticule").datum(r[i]).attr("fill",colors.clickable).attr("d",path).attr("class","clickable").attr("world110-country-id",i).attr("database-id",e[n].id).on("click",function(){console.log("clicked country",this);var t=$(this).attr("database-id");$(".current-country-data").text(""),$.ajax({method:"GET",url:"http://corre1ator.herokuapp.com/api/v1/countries/"+t,async:!0,dataType:"json",success:function(e){a(e,t)}}),d3.selectAll(".clicked").classed("clicked",!1).attr("fill",colors.clickable),d3.select(this).classed("clicked",!0).attr("fill",colors.clicked),function(){d3.select(".clicked").transition().duration(1250).tween("rotate",function(){var t=d3.geoCentroid(r[d3.select(this).attr("world110-country-id")]),e=d3.interpolate(projection.rotate(),[-t[0],-t[1]]);return function(t){projection.rotate(e(t)),map.selectAll("path").attr("d",path)}})}()}).on("mousemove",function(t){var e=d3.select(this);e.classed("clicked")?e.attr("fill",colors.clickhover):e.attr("fill",colors.hover);var a=d3.mouse(map.node()).map(function(t){return parseInt(t)});tooltip.classed("hidden",!1).attr("style","left:"+(a[0]+15)+"px; top:"+(a[1]-15)+"px").html(t.name)}).on("mouseout",function(){var t=d3.select(this);t.classed("clicked")?t.attr("fill",colors.clicked):d3.select(this).attr("fill",colors.clickable)});map.insert("path",".graticule").datum(topojson.mesh(t,t.objects.countries,function(t,e){return t!==e})).attr("class","boundary").attr("d",path)}var margin=10,width=parseInt(d3.select("#globe_nav_container").style("width")),width=width-margin-margin,mapRatio=.5,height=width*mapRatio,width=400,height=400,colors={clickable:"black",hover:"tomato",clicked:"orange",clickhover:"darkorange"},projection=d3.geoOrthographic().scale(width/2).translate([width/2,height/2]).clipAngle(90).precision(10),path=d3.geoPath().projection(projection),graticule=d3.geoGraticule(),map=d3.select("#globe_nav_container").append("svg").attr("width",width).attr("height",height).attr("class","map"),tooltip=d3.select("#globe_nav_container").append("div").attr("class","hidden tooltip");map.append("defs").append("path").datum({type:"Sphere"}).attr("id","sphere").attr("d",path),map.append("use").attr("class","stroke").attr("xlink:href","#sphere"),map.append("path").datum(graticule).attr("class","graticule").attr("d",path),d3.select(window).on("resize",resizeGlobe),$.ajax({method:"GET",url:"/world_data",async:!0,dataType:"json",success:function(t){ready(t[0],t[1])}}),d3.select(self.frameElement).style("height",height+"px");var data=[10,50,80],innerRadius=90,outerRadius=120,color=d3.scaleOrdinal().range(["red","blue","orange"]),canvas=d3.select("#donut-chart").append("svg").attr("width",350).attr("height",350),group=canvas.append("g").attr("transform","translate(175, 175)"),arc=d3.arc().innerRadius(innerRadius).outerRadius(outerRadius),pie=d3.pie().value(function(t){return t}),arcs=group.selectAll(".arc").data(pie(data)).enter().append("g").attr("class","arc");arcs.append("path").attr("d",arc).attr("fill",function(t){return color(t.data)}),arcs.append("text").attr("transform",function(t){return"translate("+arc.centroid(t)+")"}).attr("text-anchor","middle").attr("font-size","1.1em").attr("fill","white").text(function(t){return t.data});var dataArr=[5,20,50,60],width=300,height=300,widthScale=d3.scaleLinear().domain([0,80]).range([0,width]),color=d3.scaleLinear().domain([0,60]).range(["red","blue"]),axis=d3.axisBottom().tickArguments(3).tickSize(10).scale(widthScale),canvas=d3.select("#bar-chart").append("svg").attr("width",width).attr("height",height).append("g").attr("transform","translate(20, 20)"),bars=canvas.selectAll("rect").data(dataArr).enter().append("rect").attr("width",function(t){return widthScale(t)}).attr("height",30).attr("fill",function(t){return color(t)}).attr("y",function(t,e){return 40*e});canvas.append("g").attr("transform","translate(0, 160)").call(axis);